---
import Seo from "../components/Seo.astro";
import { Image } from "astro:assets";
import imgimages_gii_solution_img_5_1_webp from "../../public/images/gii_solution_img_5_1.webp";
import imgimages_gii_solution_img_5_2_webp from "../../public/images/gii_solution_img_5_2.webp";
import imgimages_gii_solution_img_5_3_webp from "../../public/images/gii_solution_img_5_3.webp";
import imgimages_gii_solution_img_5_4_webp from "../../public/images/gii_solution_img_5_4.webp";
import imgimages_gii_solution_img_6_webp from "../../public/images/gii_solution_img_6.webp";
import imgimages_gii_clr_img_1_webp from "../../public/images/gii_clr_img_1.webp";
import imgimages_gii_clr_img_2_webp from "../../public/images/gii_clr_img_2.webp";
import "../styles/global.css";
import MainLayout from "../layouts/MainLayout.astro";
import PhygitalSolutionHeader from "../layouts/solution/PhygitalSolutionHeader.astro";

import Breadcrumb from "../components/Breadcrumb.astro";
import StepOne from "../layouts/solution/StepOne.astro";
import StepTwo from "../layouts/solution/StepTwo.astro";
import StepThree from "../layouts/solution/StepThree.astro";
import StepFour from "../layouts/solution/StepFour.astro";
import StepFive from "../layouts/solution/StepFive.astro";
import StepSix from "../layouts/solution/StepSix.astro";
import ConformiteLoiReen from "../layouts/solution/ConformiteLoiReen.astro";
---

<html lang="en">
  <head>
    <script>
      import { showToast } from "../components/toast";
      (() => {
        const els = [...document.querySelectorAll("form")];
        if (!els?.length) return;
        els.forEach((el) => {
          el.addEventListener("submit", async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const formObject = Object.fromEntries(formData);
            formObject.emailUser = "quangnhat249@gmail.com";
            try {
              const response = await fetch("undefined/api/send-mail-contact", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(formObject),
              });
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
              const result = await response.json();
              showToast("Form submitted successfully!");
            } catch (error) {
              console.error("Error submitting form:", error);
              showToast("Error submitting form", "error");
            }
          });
        });
      })();
    </script>
    <script>
      class LazyLoad extends HTMLElement {
        constructor() {
          super();
          class HeadlessDetect {
            allTestFunctions = [
              "testUserAgent",
              "testChromeWindow",
              "testPlugins",
              "testAppVersion",
              "testConnectionRtt",
            ];

            constructor() {}

            testUserAgent() {
              if (/Headless/.test(window.navigator.userAgent)) {
                return 1;
              } else {
                return 0;
              }
            }

            testChromeWindow() {
              // @ts-ignore
              if (eval.toString().length == 33 && !window.chrome) {
                return 1;
              } else {
                return 0;
              }
            }

            testNotificationPermissions(callback) {
              navigator.permissions
                .query({ name: "notifications" })
                .then(function (permissionStatus) {
                  if (
                    Notification.permission === "denied" &&
                    permissionStatus.state === "prompt"
                  ) {
                    // Headless
                    callback(1);
                  } else {
                    // Not Headless
                    callback(0);
                  }
                });
            }

            testPlugins() {
              let length = navigator.plugins.length;

              return length === 0 ? 1 : 0;
            }

            testAppVersion() {
              let appVersion = navigator.appVersion;

              return /headless/i.test(appVersion) ? 1 : 0;
            }

            // Connection Rtt
            testConnectionRtt() {
              // @ts-ignore
              let connection = navigator.connection;
              let connectionRtt = connection ? connection.rtt : undefined;

              if (connectionRtt === undefined) {
                return 0;
              } else {
                return connectionRtt === 0 ? 1 : 0;
              }
            }

            getHeadlessScore() {
              let score = 0;
              let testsRun = 0;

              this.testNotificationPermissions(function (v) {
                score += v;
                testsRun++;
              });

              for (let i = 0; i < this.allTestFunctions.length; i++) {
                score += this[this.allTestFunctions[i]].apply();
                testsRun++;
              }

              return score / testsRun;
            }
          }
          const headlessDetector = new HeadlessDetect();
          if (headlessDetector.getHeadlessScore() > 0.25) {
            while (this.firstChild) {
              this.removeChild(this.firstChild);
            }
          }
        }
      }

      customElements.define("lazy-load", LazyLoad);
    </script>
    <Seo
      seo={{
        title: "EcoBuilder",
        description: "Page description",
        keywords: "",
        canonical: "https://gii-1739185650452.netlify.app/undefined",
        image: "https://gii-1739185650452.netlify.app",
        type: "website",
        themeColor: "#ffffff",
      }}
    />
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/x-icon"
      href="/favicons/1737683475762_images.ico"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <MainLayout>
    <Breadcrumb
      mainPage="accueil"
      subPage="solution"
      mainLink="/"
      subLink="/solution"
    />
    <section
      class="main-component flex flex-col text-white bg-slate-800"
      aria-label="Phygital Solution Section">
      <div
        class="px-12 lg:px-20 max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
        <PhygitalSolutionHeader />
      </div>
      <div
        class="flex flex-col justify-center text-xl font-medium leading-10 text-center text-white pb-16"
        aria-label="Green IT Impact Section">
        <div
          class="flex flex-row justify-center py-6 w-full border-t border-b bg-slate-700 border-white px-4 sm:px-6 lg:px-8 max-md:px-5 max-md:max-w-full"
          aria-label="Inner Container">
          <p
            width="auto"
            height="auto"
            class="text-white text-lg lg:text-xl max-w-screen-2xl mx-auto"
            aria-label="Green IT Impact Text"
            cssResizer="!flex-shrink">
            Green IT Impact, ce n’est pas qu’un outil ! C’est une méthodologie
            basée sur plus de 5 années d’expérimentation pour atteindre les
            meilleurs résultats.
          </p>
        </div>
      </div>
      <div
        class="px-12 lg:px-20 max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
        <p class="text-[36px] font-[600]">
          LES 6 ÉTAPES DE LA MÉTHODOLOGIE GREEN IT IMPACT...
        </p>
      </div>
      <div class="gap-24 flex flex-col">
        <StepOne />
        <StepTwo />
        <StepThree />
        <StepFour />
        <StepFive />
        <div
          class="px-12 lg:px-20 max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
          <StepSix />
        </div>
      </div>

      <ConformiteLoiReen />
    </section>
  </MainLayout>
</html>
