---
import Seo from "../components/Seo.astro";
import { Image } from "astro:assets";
import imgimages_gii_logo_webp from "../../public/images/gii_logo.webp";
import imgimages_menu_bar_webp from "../../public/images/menu-bar.webp";
import imgimages_chevron_right_webp from "../../public/images/chevron-right.webp";
import imgimages_gii_digital_technology_img_1_webp from "../../public/images/gii_digital_technology_img_1.webp";
import imgimages_gii_digital_technology_img_2_webp from "../../public/images/gii_digital_technology_img_2.webp";


import imgimages_gaiact_linkedin_icon2_webp from "../../public/images/gaiact_linkedin_icon2.webp";
import imgimages_gaiact_instagram_icon_webp from "../../public/images/gaiact_instagram_icon.webp";
import "../styles/global.css";
import MainLayout from "../layouts/MainLayout.astro";
import DigitalGrow from "../layouts/responsable/DigitalGrow.astro";
import Breadcrumb from "../components/Breadcrumb.astro";
import CurrentDay from "../layouts/responsable/CurrentDay.astro";
import KeyFeature from "../layouts/responsable/KeyFeature.astro";
import ResponsableDigital from "../layouts/responsable/ResponsableDigital.astro";
import DigitalReponsable from "../layouts/responsable/DigitalReponsable.astro";
---

<html lang="en">
  <head>
    <script>
      import { showToast } from "../components/toast";
      (() => {
        const els = [...document.querySelectorAll("form")];
        if (!els?.length) return;
        els.forEach((el) => {
          el.addEventListener("submit", async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const formObject = Object.fromEntries(formData);
            formObject.emailUser = "quangnhat249@gmail.com";
            try {
              const response = await fetch("undefined/api/send-mail-contact", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(formObject),
              });
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
              const result = await response.json();
              showToast("Form submitted successfully!");
            } catch (error) {
              console.error("Error submitting form:", error);
              showToast("Error submitting form", "error");
            }
          });
        });
      })();
    </script>
    <script>
      class LazyLoad extends HTMLElement {
        constructor() {
          super();
          class HeadlessDetect {
            allTestFunctions = [
              "testUserAgent",
              "testChromeWindow",
              "testPlugins",
              "testAppVersion",
              "testConnectionRtt",
            ];

            constructor() {}

            testUserAgent() {
              if (/Headless/.test(window.navigator.userAgent)) {
                return 1;
              } else {
                return 0;
              }
            }

            testChromeWindow() {
              // @ts-ignore
              if (eval.toString().length == 33 && !window.chrome) {
                return 1;
              } else {
                return 0;
              }
            }

            testNotificationPermissions(callback) {
              navigator.permissions
                .query({ name: "notifications" })
                .then(function (permissionStatus) {
                  if (
                    Notification.permission === "denied" &&
                    permissionStatus.state === "prompt"
                  ) {
                    // Headless
                    callback(1);
                  } else {
                    // Not Headless
                    callback(0);
                  }
                });
            }

            testPlugins() {
              let length = navigator.plugins.length;

              return length === 0 ? 1 : 0;
            }

            testAppVersion() {
              let appVersion = navigator.appVersion;

              return /headless/i.test(appVersion) ? 1 : 0;
            }

            // Connection Rtt
            testConnectionRtt() {
              // @ts-ignore
              let connection = navigator.connection;
              let connectionRtt = connection ? connection.rtt : undefined;

              if (connectionRtt === undefined) {
                return 0;
              } else {
                return connectionRtt === 0 ? 1 : 0;
              }
            }

            getHeadlessScore() {
              let score = 0;
              let testsRun = 0;

              this.testNotificationPermissions(function (v) {
                score += v;
                testsRun++;
              });

              for (let i = 0; i < this.allTestFunctions.length; i++) {
                score += this[this.allTestFunctions[i]].apply();
                testsRun++;
              }

              return score / testsRun;
            }
          }
          const headlessDetector = new HeadlessDetect();
          if (headlessDetector.getHeadlessScore() > 0.25) {
            while (this.firstChild) {
              this.removeChild(this.firstChild);
            }
          }
        }
      }

      customElements.define("lazy-load", LazyLoad);
    </script>
    <Seo
      seo={{
        title: "EcoBuilder",
        description: "Page description",
        keywords: "",
        canonical: "https://gii-1739185650452.netlify.app/undefined",
        image: "https://gii-1739185650452.netlify.app",
        type: "website",
        themeColor: "#ffffff",
      }}
    />
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/x-icon"
      href="/favicons/1737683475762_images.ico"
    />
    <!-- <link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/> -->
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
    <MainLayout>
      <section
        class="main-component flex flex-col bg-slate-800"
        aria-labelledby="digitalGrowthTitle">
        <div class="px-12 lg:px-20 max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
          <Breadcrumb mainPage="accueil" subPage="numÃ©rique responsable" mainLink="/" subLink="/responsable"/>
        </div>
        <div class="max-md:max-w-full flex w-full flex-col justify-center  mx-auto">
          <DigitalGrow/>
        </div>
        <div class="px-12 lg:px-20 max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
          <CurrentDay/>
        </div>
        <div class="flex w-full flex-col justify-center  mx-auto">
          <KeyFeature/>
        </div>
        <div class="px-12 lg:px-20  max-md:max-w-full flex w-full flex-col justify-center max-w-screen-2xl mx-auto">
          <ResponsableDigital/>
        </div>
   
        <div class="max-md:max-w-full flex w-full flex-col justify-center mx-auto">
          <DigitalReponsable/>
        </div>
      </section>
    </MainLayout>
</html>
